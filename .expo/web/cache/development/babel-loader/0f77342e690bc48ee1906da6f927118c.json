{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"Z:\\\\GitHub\\\\Repositories\\\\InLineSkate\\\\screens\\\\S_SignIn.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport firebase from \"../firebase/fire.js\";\n\nvar S_SignIn = function S_SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var signIn = function signIn() {\n    var handleSignUp, response;\n    return _regeneratorRuntime.async(function signIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            handleSignUp = function handleSignUp() {\n              return _regeneratorRuntime.async(function handleSignUp$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      clearErrors();\n                      firebase.auth().signInWithEmailAndPassword(email, password).catch(function (err) {\n                        switch (err.code) {\n                          case \"auth/invalid-email\":\n                            setEmailError(err.message);\n                            break;\n\n                          case \"auth/user-disabled\":\n                            setEmailError(err.message);\n                            break;\n\n                          case \"auth/user-not-found\":\n                            setEmailError(err.message);\n                            break;\n\n                          case \"auth/wrong-password\":\n                            setPasswordError(err.message);\n                            break;\n                        }\n                      });\n                      navigation.navigate('Home');\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            };\n\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n          case 4:\n            response = _context2.sent;\n            navigation.navigate('SignIn');\n            _context2.next = 11;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            setError(_context2.t0.message);\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), error ? React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \") : null, React.createElement(Button, {\n    title: \"SignIn\",\n    onPress: function onPress() {\n      return signIn;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? Sign Up\")));\n};\n\nexport default S_SignIn;","map":{"version":3,"sources":["Z:/GitHub/Repositories/InLineSkate/screens/S_SignIn.js"],"names":["React","useState","Button","Input","Text","firebase","S_SignIn","navigation","email","setEmail","password","setPassword","error","setError","signIn","handleSignUp","clearErrors","auth","signInWithEmailAndPassword","catch","err","code","setEmailError","message","setPasswordError","navigate","response","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {TouchableOpacity} from 'react-native';\r\nimport { Button, Input, Text } from 'react-native-elements';\r\nimport firebase from '../firebase/fire.js';\r\n\r\n\r\nconst S_SignIn = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const signIn = async () => {\r\n        const handleSignUp = async () => {\r\n            clearErrors();\r\n            firebase.auth().signInWithEmailAndPassword(email, password).catch((err) => {\r\n                switch (err.code) {\r\n                    case \"auth/invalid-email\":\r\n                        setEmailError(err.message)\r\n                        break;\r\n\r\n                    case \"auth/user-disabled\":\r\n                        setEmailError(err.message)\r\n                        break;\r\n\r\n                    case \"auth/user-not-found\":\r\n                        setEmailError(err.message)\r\n                        break;\r\n\r\n                    case \"auth/wrong-password\":\r\n                        setPasswordError(err.message);\r\n                        break;\r\n                }\r\n            });\r\n            navigation.navigate('Home');\r\n    }\r\n        \r\n        \r\n        try {\r\n            const response = await firebase.auth().signInWithEmailAndPassword(email, password);\r\n            navigation.navigate('SignIn')\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Input\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n        />\r\n\r\n        <Input\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry\r\n        />\r\n\r\n        {\r\n            error ?\r\n                <Text style={{ color: 'red' }}> {error} </Text>\r\n                : null\r\n        }\r\n        <Button title=\"SignIn\" onPress={() => signIn} />\r\n        \r\n        <TouchableOpacity onPress = {() => navigation.navigate('SignUp')}>\r\n            <Text>Don't have an account? Sign Up</Text>\r\n        </TouchableOpacity>\r\n    </>\r\n};\r\n\r\nexport default S_SignIn;"]},"metadata":{},"sourceType":"module"}