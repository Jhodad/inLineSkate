{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"Z:\\\\GitHub\\\\Repositories\\\\InLineSkate\\\\screens\\\\S_SignIn.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport { firebase } from \"../firebase/fire.js\";\n\nvar S_SignIn = function S_SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleSignIn = function handleSignIn() {\n    return _regeneratorRuntime.async(function handleSignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n              return navigation.navigate('SignIn');\n            }).catch(function (error) {\n              switch (error.code) {\n                case \"auth/invalid-email\":\n                  showAlert(\"Invalid credentials\");\n                  break;\n\n                case \"auth/user-disabled\":\n                  showAlert(\"User disabled\");\n                  break;\n\n                case \"auth/user-not-found\":\n                  setError(\"User does not exist\");\n                  showAlert();\n                  break;\n\n                default:\n                  setError(\"Error\");\n                  showAlert();\n                  break;\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showAlert = function showAlert(errorReceived) {\n    return Alert.alert(\"ERROR:\", {\n      errorReceived: errorReceived\n    }, [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return Alert.alert(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }], {\n      cancelable: true,\n      onDismiss: function onDismiss() {\n        return Alert.alert(\"This alert was dismissed by tapping outside of the alert dialog.\");\n      }\n    });\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), error ? React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \") : null, React.createElement(Button, {\n    title: \"SignIn\",\n    onPress: handleSignIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? Sign Up\")));\n};\n\nexport default S_SignIn;","map":{"version":3,"sources":["Z:/GitHub/Repositories/InLineSkate/screens/S_SignIn.js"],"names":["React","useState","Button","Input","Text","firebase","S_SignIn","navigation","email","setEmail","password","setPassword","handleSignIn","auth","signInWithEmailAndPassword","then","navigate","catch","error","code","showAlert","setError","errorReceived","Alert","alert","text","onPress","style","cancelable","onDismiss","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Alert } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { Button, Input, Text } from 'react-native-elements';\r\nimport { firebase } from '../firebase/fire.js';\r\n\r\n\r\n\r\nconst S_SignIn = ({ navigation }) => {\r\n    \r\nconst [email, setEmail] = useState('');\r\nconst [password, setPassword] = useState('');\r\n\r\n\r\n\r\n    const handleSignIn = async () => {\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(() => navigation.navigate('SignIn'))\r\n            .catch(error => {\r\n                switch (error.code) {\r\n                    case \"auth/invalid-email\":\r\n                        showAlert(\"Invalid credentials\");\r\n                        break;\r\n\r\n                    case \"auth/user-disabled\":\r\n                        showAlert(\"User disabled\");\r\n                        \r\n                        break;\r\n\r\n                    case \"auth/user-not-found\":\r\n                        setError(\"User does not exist\");\r\n                        showAlert();\r\n                        break;\r\n\r\n                    default:\r\n                        setError(\"Error\");\r\n                        showAlert();\r\n                        break;\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const showAlert = (errorReceived) =>\r\n    Alert.alert(\r\n        \"ERROR:\",\r\n        {errorReceived},\r\n        [\r\n            {\r\n                text: \"Cancel\",\r\n                onPress: () => Alert.alert(\"Cancel Pressed\"),\r\n                style: \"cancel\",\r\n            },\r\n        ],\r\n        {\r\n            cancelable: true,\r\n            onDismiss: () =>\r\n                Alert.alert(\r\n                    \"This alert was dismissed by tapping outside of the alert dialog.\"\r\n                ),\r\n        }\r\n    );\r\n\r\n\r\n\r\n    return <>\r\n        <Input\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n        />\r\n\r\n        <Input\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry\r\n        />\r\n\r\n        {\r\n            error ?\r\n                <Text style={{ color: 'red' }}> {error} </Text>\r\n                : null\r\n        }\r\n\r\n        <Button title=\"SignIn\" onPress={handleSignIn} />\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n            <Text>Don't have an account? Sign Up</Text>\r\n        </TouchableOpacity>\r\n    </>\r\n};\r\n\r\nexport default S_SignIn;"]},"metadata":{},"sourceType":"module"}