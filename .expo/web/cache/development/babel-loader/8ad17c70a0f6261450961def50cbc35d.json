{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"Z:\\\\GitHub\\\\Repositories\\\\InLineSkate\\\\screens\\\\S_SignUp.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport firebase from \"../firebase/fire.js\";\n\nvar S_SignUp = function S_SignUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var signUp = function signUp() {\n    return _regeneratorRuntime.async(function signUp$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              firebase.auth().createUserWithEmailAndPassword(email, password);\n              navigation.navigate('SignIn');\n            } catch (err) {\n              setError(err.message);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), error ? React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \") : null, React.createElement(Button, {\n    title: \"SignUp\",\n    onPress: function onPress() {\n      return signUp;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignIn');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Already have an account? Sign In\")));\n};\n\nexport default S_SignUp;","map":{"version":3,"sources":["Z:/GitHub/Repositories/InLineSkate/screens/S_SignUp.js"],"names":["React","useState","Button","Input","Text","firebase","S_SignUp","navigation","email","setEmail","password","setPassword","error","setError","signUp","auth","createUserWithEmailAndPassword","navigate","err","message","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,uBAApC;AACA,OAAOC,QAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACjC,kBAA0BN,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCR,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BV,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AACX,gBAAI;AACAT,cAAAA,QAAQ,CAACU,IAAT,GAAgBC,8BAAhB,CAA+CR,KAA/C,EAAsDE,QAAtD;AACAH,cAAAA,UAAU,CAACU,QAAX,CAAoB,QAApB;AACH,aAHD,CAGE,OAAOC,GAAP,EAAY;AACVL,cAAAA,QAAQ,CAACK,GAAG,CAACC,OAAL,CAAR;AACH;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AASA,SAAO,0CACH,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAEX,KAFX;AAGI,IAAA,YAAY,EAAEC,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAOH,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,KAAK,EAAEC,QAFX;AAGI,IAAA,YAAY,EAAEC,WAHlB;AAII,IAAA,eAAe,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,EAeCC,KAAK,GACD,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCR,KAAjC,MADC,GAEC,IAjBP,EAmBH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAME,MAAN;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBG,EAoBH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAI;AAAA,aAAMP,UAAU,CAACU,QAAX,CAAoB,QAApB,CAAN;AAAA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,CApBG,CAAP;AAwBH,CAtCD;;AAwCA,eAAeX,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport {TouchableOpacity} from 'react-native';\r\nimport { Button, Input, Text } from 'react-native-elements';\r\nimport firebase from '../firebase/fire.js';\r\n\r\nconst S_SignUp = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const signUp = async () => {\r\n        try {\r\n            firebase.auth().createUserWithEmailAndPassword(email, password);\r\n            navigation.navigate('SignIn')\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Input\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n        />\r\n\r\n        <Input\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry\r\n        />\r\n\r\n        {\r\n            error ?\r\n                <Text style={{ color: 'red' }}> {error} </Text>\r\n                : null\r\n        }\r\n        <Button title=\"SignUp\" onPress={() => signUp} />\r\n        <TouchableOpacity onPress = {() => navigation.navigate('SignIn')}>\r\n            <Text>Already have an account? Sign In</Text>\r\n        </TouchableOpacity>\r\n    </>\r\n};\r\n\r\nexport default S_SignUp;"]},"metadata":{},"sourceType":"module"}