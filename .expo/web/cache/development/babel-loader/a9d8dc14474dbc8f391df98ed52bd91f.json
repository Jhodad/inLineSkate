{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"Z:\\\\GitHub\\\\Repositories\\\\InLineSkate\\\\screens\\\\S_SignIn.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, Input, Text } from 'react-native-elements';\nimport firebase from \"../firebase/fire.js\";\n\nvar showAlert = function showAlert() {\n  return Alert.alert(\"Alert Title\", \"My Alert Msg\", [{\n    text: \"Cancel\",\n    onPress: function onPress() {\n      return Alert.alert(\"Cancel Pressed\");\n    },\n    style: \"cancel\"\n  }], {\n    cancelable: true,\n    onDismiss: function onDismiss() {\n      return Alert.alert(\"This alert was dismissed by tapping outside of the alert dialog.\");\n    }\n  });\n};\n\nvar S_SignIn = function S_SignIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var handleSignIn = function handleSignIn() {\n    return _regeneratorRuntime.async(function handleSignIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              firebase.auth().signInUserWithEmailAndPassword(email, password);\n              navigation.navigate('SignIn');\n            } catch (err) {\n              setError(err.message);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Input, {\n    label: \"Email\",\n    value: email,\n    onChangeText: setEmail,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    value: password,\n    onChangeText: setPassword,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), error ? React.createElement(Text, {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \" \", error, \" \") : null, React.createElement(Button, {\n    title: \"SignIn\",\n    onPress: function onPress() {\n      return showAlert;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? Sign Up\")));\n};\n\nexport default S_SignIn;","map":{"version":3,"sources":["Z:/GitHub/Repositories/InLineSkate/screens/S_SignIn.js"],"names":["React","useState","Button","Input","Text","firebase","showAlert","Alert","alert","text","onPress","style","cancelable","onDismiss","S_SignIn","navigation","email","setEmail","password","setPassword","error","setError","handleSignIn","auth","signInUserWithEmailAndPassword","navigate","err","message","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,uBAApC;AACA,OAAOC,QAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAClBC,KAAK,CAACC,KAAN,CACI,aADJ,EAEI,cAFJ,EAGI,CACI;AACIC,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACC,KAAN,CAAY,gBAAZ,CAAN;AAAA,KAFb;AAGIG,IAAAA,KAAK,EAAE;AAHX,GADJ,CAHJ,EAUI;AACIC,IAAAA,UAAU,EAAE,IADhB;AAEIC,IAAAA,SAAS,EAAE;AAAA,aACPN,KAAK,CAACC,KAAN,CACI,kEADJ,CADO;AAAA;AAFf,GAVJ,CADkB;AAAA,CAAlB;;AAoBA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACjC,kBAA0Bd,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOe,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgChB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOiB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA0BlB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOmB,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAKjB,gBAAI;AACAjB,cAAAA,QAAQ,CAACkB,IAAT,GAAgBC,8BAAhB,CAA+CR,KAA/C,EAAsDE,QAAtD;AACAH,cAAAA,UAAU,CAACU,QAAX,CAAoB,QAApB;AACH,aAHD,CAGE,OAAOC,GAAP,EAAY;AACVL,cAAAA,QAAQ,CAACK,GAAG,CAACC,OAAL,CAAR;AACH;;AAVgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAaA,SAAO,0CACH,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,KAAK,EAAEX,KAFX;AAGI,IAAA,YAAY,EAAEC,QAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAOH,oBAAC,KAAD;AACI,IAAA,KAAK,EAAC,UADV;AAEI,IAAA,KAAK,EAAEC,QAFX;AAGI,IAAA,YAAY,EAAEC,WAHlB;AAII,IAAA,eAAe,MAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,EAeCC,KAAK,GACD,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEQ,MAAAA,KAAK,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAiCR,KAAjC,MADC,GAEC,IAjBP,EAoBH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE;AAAA,aAAMd,SAAN;AAAA,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBG,EAsBH,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMS,UAAU,CAACU,QAAX,CAAoB,QAApB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,CAtBG,CAAP;AA0BH,CA5CD;;AA8CA,eAAeX,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Alert } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native';\r\nimport { Button, Input, Text } from 'react-native-elements';\r\nimport firebase from '../firebase/fire.js';\r\n\r\nconst showAlert = () =>\r\nAlert.alert(\r\n    \"Alert Title\",\r\n    \"My Alert Msg\",\r\n    [\r\n        {\r\n            text: \"Cancel\",\r\n            onPress: () => Alert.alert(\"Cancel Pressed\"),\r\n            style: \"cancel\",\r\n        },\r\n    ],\r\n    {\r\n        cancelable: true,\r\n        onDismiss: () =>\r\n            Alert.alert(\r\n                \"This alert was dismissed by tapping outside of the alert dialog.\"\r\n            ),\r\n    }\r\n);\r\n\r\nconst S_SignIn = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSignIn = async () => {\r\n\r\n\r\n       \r\n\r\n        try {\r\n            firebase.auth().signInUserWithEmailAndPassword(email, password);\r\n            navigation.navigate('SignIn')\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Input\r\n            label=\"Email\"\r\n            value={email}\r\n            onChangeText={setEmail}\r\n        />\r\n\r\n        <Input\r\n            label=\"Password\"\r\n            value={password}\r\n            onChangeText={setPassword}\r\n            secureTextEntry\r\n        />\r\n\r\n        {\r\n            error ?\r\n                <Text style={{ color: 'red' }}> {error} </Text>\r\n                : null\r\n        }\r\n\r\n        <Button title=\"SignIn\" onPress={() => showAlert} />\r\n\r\n        <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n            <Text>Don't have an account? Sign Up</Text>\r\n        </TouchableOpacity>\r\n    </>\r\n};\r\n\r\nexport default S_SignIn;"]},"metadata":{},"sourceType":"module"}